// <auto-generated>
//	 This code was generated by a tool.
//
//	 Changes to this file may cause incorrect behavior and will be lost if
//	 the code is regenerated.
// </auto-generated>

using pindwin.umvr.Model;
using pindwin.umvr.Reactor;
using pindwin.umvr.Repository;
using pindwin.umvr.Serialization;
using Zenject;

namespace pindwin.Scripts.Field
{
	public partial class FieldFactory : ModelFactory<IField, FieldModel, UnityEngine.Vector3Int>
	{
		public FieldFactory(IRepository<IField> repository, [InjectOptional] ISerializer<FieldModel> serializer) : base(repository, serializer)
		{ }
	}

	public partial class FieldRepository : Repository<IField, FieldModel, FieldReactor>
	{
		public FieldRepository(FieldReactorFactory fieldReactorFactory) : base(fieldReactorFactory)
		{ }
	}
	
	public class FieldReactorFactory : ReactorFactory<FieldModel, FieldReactor>
	{ }
}

namespace pindwin.Scripts.Field.Generated
{
	public class FieldInstallerBase : Installer<FieldInstallerBase>
	{
		public override void InstallBindings()
		{
			Container.BindFactory<Id, UnityEngine.Vector3Int, FieldModel, FieldFactory>();
			Container.Bind<IModelFactory<IField, UnityEngine.Vector3Int>>().To<FieldFactory>().FromResolve();
			Container.BindFactory<FieldModel, FieldReactor, FieldReactorFactory>();
			Container.BindInterfacesAndSelfTo<FieldRepository>().AsSingle();
		}
	}
}